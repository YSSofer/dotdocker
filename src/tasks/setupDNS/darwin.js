import Listr from 'listr';
import execa from 'execa';
import { resolve as resolvePath } from 'path';
import { existsSync, writeFile as writeFileCallback, mkdir as mkdirCallback } from 'fs';
import { promisify } from 'util';

const writeFile = promisify(writeFileCallback);
const mkdir = promisify(mkdirCallback);
const resolverDirPath = '/etc/resolver/';
const resolverPath = resolvePath(resolverDirPath, 'docker');
const resolverContents = `# Generated by dotdocker
nameserver 127.0.0.1
`;

export default {
  title: 'Setting up DNS',
  task: ctx =>
    new Listr([
      {
        title: 'Creating resolver configuration directory',
        task: async () => {
          try {
            if (!existsSync(resolverDirPath)) {
              await mkdir(resolverDirPath);
            }
          } catch (err) {
            if (err.code === 'EACCES')
              throw new Error('This task needs elevated permissions. Please run again using sudo.');
            throw err;
          }
        },
      },
      {
        title: 'Creating resolver configuration file',
        task: async () => {
          try {
            const { port } = ctx;
            await writeFile(
              resolverPath,
              port ? `${resolverContents}port ${port}\n` : resolverContents,
            );
          } catch (err) {
            if (err.code === 'EACCES')
              throw new Error('This task needs elevated permissions. Please run again using sudo.');
            throw err;
          }
        },
      },
      {
        title: 'Sending reload signal to mDNSResponder',
        task: () => execa('killall', ['-HUP', 'mDNSResponder']),
      },
    ]),
};
